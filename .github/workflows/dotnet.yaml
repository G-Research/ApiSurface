name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # so that NerdBank.GitVersioning has access to history
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET SDK v6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Prepare .NET tools
        run: dotnet tool restore
      - name: Run Fantomas
        run: ./hooks/pre-push

  nuget-pack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # so that NerdBank.GitVersioning has access to history
      - name: Setup .NET SDK v6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build ApiSurface/ApiSurface.fsproj --configuration Release
      - name: Pack
        run: dotnet pack ApiSurface/ApiSurface.fsproj --configuration Release
      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ApiSurface/bin/Release/ApiSurface.*.nupkg

  expected-pack:
    needs: [nuget-pack]
    runs-on: ubuntu-latest
    steps:
      - name: Download NuGet artfeact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
      - name: Check NuGet contents
        run: if [[ $(find . -maxdepth 1 -name 'ApiSurface.*.nupkg' -printf c | wc -c) -ne "1" ]]; then exit 1; fi

  all-required-checks-complete:
    needs: [check-format, build, expected-pack]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All required checks complete."

  nuget-publish:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.fork && github.ref == 'refs/heads/main' }}
    needs: [all-required-checks-complete]
    environment: release
    steps:
      - name: Download NuGet artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
      - name: Publish to NuGet
        run: dotnet nuget push "ApiSurface.*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
