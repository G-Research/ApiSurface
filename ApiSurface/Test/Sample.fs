namespace ApiSurface.Test

[<RequireQualifiedAccess>]
module Sample =

    let publicSurface : Set<string> =
        [
            "ApiSurface.SampleAssembly.Class1 inherit obj"
            "ApiSurface.SampleAssembly.Class1..ctor [constructor]: int"
            "ApiSurface.SampleAssembly.Class1.AddTwo [method]: int -> int"
            "ApiSurface.SampleAssembly.Class1.get_X [method]: unit -> string"
            "ApiSurface.SampleAssembly.Class1.get_Y [method]: unit -> string"
            "ApiSurface.SampleAssembly.Class1.set_Y [method]: string -> unit"
            "ApiSurface.SampleAssembly.Class1.X [property]: [read-only] string"
            "ApiSurface.SampleAssembly.Class1.Y [property]: string"
            "ApiSurface.SampleAssembly.InterfaceInheriter, implements ApiSurface.SampleAssembly.SampleInterface - interface with 1 member(s)"
            "ApiSurface.SampleAssembly.InterfaceInheriter.AnotherMethod [method]: unit -> int"
            "ApiSurface.SampleAssembly.Module1 inherit obj"
            "ApiSurface.SampleAssembly.Module1+Nested inherit obj"
            "ApiSurface.SampleAssembly.Module1+Nested.foo [static property]: [read-only] int"
            "ApiSurface.SampleAssembly.Module1+Nested.get_foo [static method]: unit -> int"
            "ApiSurface.SampleAssembly.Module1.get_publicAnonymousRecord [static method]: unit -> int <>f__AnonymousType2979025518"
            "ApiSurface.SampleAssembly.Module1.publicAnonymousRecord [static property]: [read-only] int <>f__AnonymousType2979025518"
            "ApiSurface.SampleAssembly.Module1.publicArgumentCurry [static method]: int -> int -> int"
            "ApiSurface.SampleAssembly.Module1.publicArgumentFunction [static method]: (int -> int) -> int"
            "ApiSurface.SampleAssembly.Module1.publicArgumentFunctionTuple [static method]: (int, int -> int) -> int"
            "ApiSurface.SampleAssembly.Module1.publicArgumentPartial [static method]: int -> (int -> int)"
            "ApiSurface.SampleAssembly.Module1.publicArgumentTupleExplicit [static method]: (int, int) -> int"
            "ApiSurface.SampleAssembly.Module1.publicArgumentTupleImplicit [static method]: (int, int) -> int"
            "ApiSurface.SampleAssembly.Module1.publicFunction [static method]: unit -> unit"
            "ApiSurface.SampleAssembly.Module1.someEmptyLiteral [static field]: string"
            "ApiSurface.SampleAssembly.Module1.someLiteral [static field]: int = 15"
            "ApiSurface.SampleAssembly.Module1.typeConstrainedMethodNested [static method]: #(int seq) list -> unit"
            "ApiSurface.SampleAssembly.Module1.typeConstrainedMethodSimple [static method]: #(int seq) -> unit"
            "ApiSurface.SampleAssembly.SampleDU inherit obj, implements ApiSurface.SampleAssembly.SampleDU System.IEquatable, System.Collections.IStructuralEquatable, ApiSurface.SampleAssembly.SampleDU System.IComparable, System.IComparable, System.Collections.IStructuralComparable - union type with 2 cases"
            "ApiSurface.SampleAssembly.SampleDU+Bar inherit ApiSurface.SampleAssembly.SampleDU"
            "ApiSurface.SampleAssembly.SampleDU+Bar.get_Item [method]: unit -> int"
            "ApiSurface.SampleAssembly.SampleDU+Bar.Item [property]: [read-only] int"
            "ApiSurface.SampleAssembly.SampleDU+Tags inherit obj"
            "ApiSurface.SampleAssembly.SampleDU+Tags.Bar [static field]: int = 1"
            "ApiSurface.SampleAssembly.SampleDU+Tags.Foo [static field]: int = 0"
            "ApiSurface.SampleAssembly.SampleDU.Equals [method]: (ApiSurface.SampleAssembly.SampleDU, System.Collections.IEqualityComparer) -> bool"
            "ApiSurface.SampleAssembly.SampleDU.Foo [static property]: [read-only] ApiSurface.SampleAssembly.SampleDU"
            "ApiSurface.SampleAssembly.SampleDU.get_Foo [static method]: unit -> ApiSurface.SampleAssembly.SampleDU"
            "ApiSurface.SampleAssembly.SampleDU.get_IsBar [method]: unit -> bool"
            "ApiSurface.SampleAssembly.SampleDU.get_IsFoo [method]: unit -> bool"
            "ApiSurface.SampleAssembly.SampleDU.get_Tag [method]: unit -> int"
            "ApiSurface.SampleAssembly.SampleDU.IsBar [property]: [read-only] bool"
            "ApiSurface.SampleAssembly.SampleDU.IsFoo [property]: [read-only] bool"
            "ApiSurface.SampleAssembly.SampleDU.NewBar [static method]: int -> ApiSurface.SampleAssembly.SampleDU"
            "ApiSurface.SampleAssembly.SampleDU.Tag [property]: [read-only] int"
            "ApiSurface.SampleAssembly.SampleInterface - interface with 4 member(s)"
            "ApiSurface.SampleAssembly.SampleInterface.get_InterfaceProperty [method]: unit -> int"
            "ApiSurface.SampleAssembly.SampleInterface.ImplementMe [method]: unit -> unit"
            "ApiSurface.SampleAssembly.SampleInterface.InterfaceProperty [property]: int"
            "ApiSurface.SampleAssembly.SampleInterface.set_InterfaceProperty [method]: int -> unit"
            "ApiSurface.SampleAssembly.ValueTupleOperations inherit obj"
            "ApiSurface.SampleAssembly.ValueTupleOperations.fst [static method]: struct ('a * 'b) -> 'a"
        ]
        |> Set.ofList

    let allIncludingInternal =
        [
            "T:<StartupCode$ApiSurface-DocumentationSample>.$.NETStandard\,Version=v2.0.AssemblyAttributes"
            "T:<StartupCode$ApiSurface-DocumentationSample>.$ApiSurface.DocumentationSample.AssemblyInfo"
            "T:<StartupCode$ApiSurface-DocumentationSample>.$ApiSurface.DocumentationSample.Version"
            "T:<StartupCode$ApiSurface-DocumentationSample>.$KitchenSink"
            "T:ApiSurface.DocumentationSample.Class1"
            "P:ApiSurface.DocumentationSample.Class1.X"
            "F:ApiSurface.DocumentationSample.Class1.myField"
            "T:ApiSurface.DocumentationSample.ConsumingModule"
            "M:ApiSurface.DocumentationSample.ConsumingModule.somethingElse``2(ApiSurface.DocumentationSample.SomeGenericType{``0,``1},``1)"
            "M:ApiSurface.DocumentationSample.ConsumingModule.somethingGeneric``2"
            "T:ApiSurface.DocumentationSample.DuWithInternalConstructors"
            "T:ApiSurface.DocumentationSample.DuWithPrivateConstructors"
            "T:ApiSurface.DocumentationSample.EnumLikeDu"
            "T:ApiSurface.DocumentationSample.GenericClassWithMethod`1"
            "M:ApiSurface.DocumentationSample.GenericClassWithMethod`1.ArrayByRef(`0[]@)"
            "M:ApiSurface.DocumentationSample.GenericClassWithMethod`1.IEnumerableByRef(System.Collections.Generic.IEnumerable{`0}@)"
            "M:ApiSurface.DocumentationSample.GenericClassWithMethod`1.M'(ApiSurface.DocumentationSample.GenericClassWithMethod{`0})"
            "T:ApiSurface.DocumentationSample.IGenericInterface`1"
            "M:ApiSurface.DocumentationSample.IGenericInterface`1.ConsumesGenericParameter(`0)"
            "M:ApiSurface.DocumentationSample.IGenericInterface`1.HasGenericArgument``1(`0,``0)"
            "T:ApiSurface.DocumentationSample.IndexedProperties`2"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.GenericItem(System.Tuple{System.Int32,System.Tuple{System.Int32,System.Int32}})"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.GenericParamItem(`1,`0,System.Int32)"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.Item(System.Int32)"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.Overloaded(System.Int32,System.Int32)"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.Overloaded(System.String,System.Int32)"
            "T:ApiSurface.DocumentationSample.ModuleWithType"
            "T:ApiSurface.DocumentationSample.ModuleWithType.DU"
            "T:ApiSurface.DocumentationSample.ModuleWithType.NestedClass`1"
            "M:ApiSurface.DocumentationSample.ModuleWithType.NestedClass`1.MethodOnANestedClass(ApiSurface.DocumentationSample.ModuleWithType.NestedClass{`0})"
            "M:ApiSurface.DocumentationSample.ModuleWithType.thing``1(ApiSurface.DocumentationSample.ModuleWithType.DU)"
            "T:ApiSurface.DocumentationSample.MomentActionsId"
            "T:ApiSurface.DocumentationSample.MyDu"
            "P:ApiSurface.DocumentationSample.MyDu.SomeProperty"
            "P:ApiSurface.DocumentationSample.MyDuModule.x"
            "P:ApiSurface.DocumentationSample.MyGenericType.myValue"
            "T:ApiSurface.DocumentationSample.MyGenericType`1"
            "T:ApiSurface.DocumentationSample.MyModule"
            "P:ApiSurface.DocumentationSample.MyModule.myValue"
            // Note, for example, that an internal method is visible in the toString. However, it will be ignored
            // for surface checking.
            "M:ApiSurface.DocumentationSample.MyModule.skipMe"
            "M:ApiSurface.DocumentationSample.MyModule.someFunc(System.Int32)"
            "M:ApiSurface.DocumentationSample.MyModule.somePrivateFunc"
            "M:ApiSurface.DocumentationSample.MyModule.unitFunc"
            "T:ApiSurface.DocumentationSample.MyOperators"
            "M:ApiSurface.DocumentationSample.MyOperators.op_TwiddleTwiddle(System.Int32)"
            "T:ApiSurface.DocumentationSample.MyTinyType"
            "T:ApiSurface.DocumentationSample.PrivateDu"
            "T:ApiSurface.DocumentationSample.PrivateRecord"
            "P:ApiSurface.DocumentationSample.PrivateRecord.PrivateField"
            "T:ApiSurface.DocumentationSample.SomeActivePatterns"
            "M:ApiSurface.DocumentationSample.SomeActivePatterns.|ActivePatternName|_|``2(``0)"
            "T:ApiSurface.DocumentationSample.SomeExceptionType"
            "T:ApiSurface.DocumentationSample.SomeExceptionTypeWithArgs"
            "T:ApiSurface.DocumentationSample.SomeGenericType`2"
            "M:ApiSurface.DocumentationSample.SomeGenericType`2.SomeGenericMethod``1(`0,ApiSurface.DocumentationSample.SomeGenericType{`0,``0})"
            "T:ApiSurface.DocumentationSample.SomeModule"
            "P:ApiSurface.DocumentationSample.SomeModule.Bar"
            "P:ApiSurface.DocumentationSample.SomeModule.Foo"
            "T:ApiSurface.DocumentationSample.SomeModule.SomeNestedModule"
            "P:ApiSurface.DocumentationSample.SomeModule.SomeNestedModule.foo"
            "T:ApiSurface.DocumentationSample.SomeRecord"
            "M:ApiSurface.DocumentationSample.SomeRecord.Parse``2(``0)"
            "P:ApiSurface.DocumentationSample.SomeRecord.SomeField"
            "P:ApiSurface.DocumentationSample.SomeRecord.SomeMutableField"
            "T:ApiSurface.DocumentationSample.ThisAssembly"
            "P:ApiSurface.DocumentationSample.ThisAssembly.AssemblyConfiguration"
            "P:ApiSurface.DocumentationSample.ThisAssembly.AssemblyFileVersion"
            "P:ApiSurface.DocumentationSample.ThisAssembly.AssemblyInformationalVersion"
            "P:ApiSurface.DocumentationSample.ThisAssembly.AssemblyName"
            "P:ApiSurface.DocumentationSample.ThisAssembly.AssemblyTitle"
            "P:ApiSurface.DocumentationSample.ThisAssembly.AssemblyVersion"
            "P:ApiSurface.DocumentationSample.ThisAssembly.GitCommitAuthorDate"
            "P:ApiSurface.DocumentationSample.ThisAssembly.GitCommitDate"
            "P:ApiSurface.DocumentationSample.ThisAssembly.GitCommitId"
            "P:ApiSurface.DocumentationSample.ThisAssembly.IsPrerelease"
            "P:ApiSurface.DocumentationSample.ThisAssembly.IsPublicRelease"
            "P:ApiSurface.DocumentationSample.ThisAssembly.RootNamespace"
            "T:ApiSurface.DocumentationSample.TypeWithMultipleConstructors"
        ]
        |> Set.ofList

    let duCaseTypes =
        [
            "T:ApiSurface.DocumentationSample.SomeGenericType`2.SomeGenericType"
            "T:ApiSurface.DocumentationSample.MyGenericType`1.SomeCase"
            "T:ApiSurface.DocumentationSample.MyTinyType.MyTinyType"
            "T:ApiSurface.DocumentationSample.PrivateDu.Bar"
            "T:ApiSurface.DocumentationSample.PrivateDu.Foo"
            "T:ApiSurface.DocumentationSample.DuWithInternalConstructors.Bar"
            "T:ApiSurface.DocumentationSample.DuWithInternalConstructors.Foo"
            "T:ApiSurface.DocumentationSample.DuWithPrivateConstructors.Bar"
            "T:ApiSurface.DocumentationSample.DuWithPrivateConstructors.Foo"
            "T:ApiSurface.DocumentationSample.EnumLikeDu.Bar"
            "T:ApiSurface.DocumentationSample.EnumLikeDu.Foo"
            "T:ApiSurface.DocumentationSample.ModuleWithType.DU.Case1"
            "T:ApiSurface.DocumentationSample.ModuleWithType.DU.Case2"
            "T:ApiSurface.DocumentationSample.MomentActionsId.MomentActionsIdConstructor"
            "T:ApiSurface.DocumentationSample.MyDu.AnotherCase"
            "T:ApiSurface.DocumentationSample.MyDu.Fieldless"
            "T:ApiSurface.DocumentationSample.MyDu.SomeCase"
        ]
        |> Set.ofList

    let publicDocumentedSurface =
        [
            "T:ApiSurface.DocumentationSample.Class1"
            "P:ApiSurface.DocumentationSample.Class1.X"
            "F:ApiSurface.DocumentationSample.Class1.myField"
            "T:ApiSurface.DocumentationSample.ConsumingModule"
            "M:ApiSurface.DocumentationSample.ConsumingModule.somethingElse``2(ApiSurface.DocumentationSample.SomeGenericType{``0,``1},``1)"
            "M:ApiSurface.DocumentationSample.ConsumingModule.somethingGeneric``2"
            "T:ApiSurface.DocumentationSample.DuWithInternalConstructors"
            "T:ApiSurface.DocumentationSample.DuWithInternalConstructors.Foo"
            "T:ApiSurface.DocumentationSample.DuWithPrivateConstructors"
            "T:ApiSurface.DocumentationSample.DuWithPrivateConstructors.Bar"
            "T:ApiSurface.DocumentationSample.EnumLikeDu"
            "T:ApiSurface.DocumentationSample.EnumLikeDu.Bar"
            "T:ApiSurface.DocumentationSample.EnumLikeDu.Foo"
            "T:ApiSurface.DocumentationSample.GenericClassWithMethod`1"
            "M:ApiSurface.DocumentationSample.GenericClassWithMethod`1.ArrayByRef(`0[]@)"
            "M:ApiSurface.DocumentationSample.GenericClassWithMethod`1.IEnumerableByRef(System.Collections.Generic.IEnumerable{`0}@)"
            "M:ApiSurface.DocumentationSample.GenericClassWithMethod`1.M'(ApiSurface.DocumentationSample.GenericClassWithMethod{`0})"
            "T:ApiSurface.DocumentationSample.IGenericInterface`1"
            "M:ApiSurface.DocumentationSample.IGenericInterface`1.ConsumesGenericParameter(`0)"
            "M:ApiSurface.DocumentationSample.IGenericInterface`1.HasGenericArgument``1(`0,``0)"
            "T:ApiSurface.DocumentationSample.IndexedProperties`2"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.GenericItem(System.Tuple{System.Int32,System.Tuple{System.Int32,System.Int32}})"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.GenericParamItem(`1,`0,System.Int32)"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.Item(System.Int32)"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.Overloaded(System.Int32,System.Int32)"
            "P:ApiSurface.DocumentationSample.IndexedProperties`2.Overloaded(System.String,System.Int32)"
            "T:ApiSurface.DocumentationSample.ModuleWithType"
            "T:ApiSurface.DocumentationSample.ModuleWithType.DU"
            "T:ApiSurface.DocumentationSample.ModuleWithType.DU.Case1"
            "T:ApiSurface.DocumentationSample.ModuleWithType.DU.Case2"
            "T:ApiSurface.DocumentationSample.ModuleWithType.NestedClass`1"
            "M:ApiSurface.DocumentationSample.ModuleWithType.NestedClass`1.MethodOnANestedClass(ApiSurface.DocumentationSample.ModuleWithType.NestedClass{`0})"
            "M:ApiSurface.DocumentationSample.ModuleWithType.thing``1(ApiSurface.DocumentationSample.ModuleWithType.DU)"
            "T:ApiSurface.DocumentationSample.MyDu"
            "T:ApiSurface.DocumentationSample.MyDu.AnotherCase"
            "T:ApiSurface.DocumentationSample.MyDu.Fieldless"
            "T:ApiSurface.DocumentationSample.MyDu.SomeCase"
            "P:ApiSurface.DocumentationSample.MyDu.SomeProperty"
            "P:ApiSurface.DocumentationSample.MyDuModule.x"
            "P:ApiSurface.DocumentationSample.MyGenericType.myValue"
            "T:ApiSurface.DocumentationSample.MyGenericType`1"
            "T:ApiSurface.DocumentationSample.MyGenericType`1.SomeCase"
            "T:ApiSurface.DocumentationSample.MyModule"
            "P:ApiSurface.DocumentationSample.MyModule.myValue"
            "M:ApiSurface.DocumentationSample.MyModule.someFunc(System.Int32)"
            "M:ApiSurface.DocumentationSample.MyModule.unitFunc"
            "T:ApiSurface.DocumentationSample.MyOperators"
            "M:ApiSurface.DocumentationSample.MyOperators.op_TwiddleTwiddle(System.Int32)"
            "T:ApiSurface.DocumentationSample.MyTinyType"
            "T:ApiSurface.DocumentationSample.MyTinyType.MyTinyType"
            "T:ApiSurface.DocumentationSample.PrivateDu.Bar"
            "T:ApiSurface.DocumentationSample.PrivateRecord"
            "P:ApiSurface.DocumentationSample.PrivateRecord.PrivateField"
            "T:ApiSurface.DocumentationSample.SomeActivePatterns"
            "M:ApiSurface.DocumentationSample.SomeActivePatterns.|ActivePatternName|_|``2(``0)"
            "T:ApiSurface.DocumentationSample.SomeExceptionType"
            "T:ApiSurface.DocumentationSample.SomeExceptionTypeWithArgs"
            "T:ApiSurface.DocumentationSample.SomeGenericType`2"
            "M:ApiSurface.DocumentationSample.SomeGenericType`2.SomeGenericMethod``1(`0,ApiSurface.DocumentationSample.SomeGenericType{`0,``0})"
            "T:ApiSurface.DocumentationSample.SomeGenericType`2.SomeGenericType"
            "T:ApiSurface.DocumentationSample.SomeModule"
            "P:ApiSurface.DocumentationSample.SomeModule.Bar"
            "P:ApiSurface.DocumentationSample.SomeModule.Foo"
            "T:ApiSurface.DocumentationSample.SomeModule.SomeNestedModule"
            "P:ApiSurface.DocumentationSample.SomeModule.SomeNestedModule.foo"
            "T:ApiSurface.DocumentationSample.SomeRecord"
            "M:ApiSurface.DocumentationSample.SomeRecord.Parse``2(``0)"
            "P:ApiSurface.DocumentationSample.SomeRecord.SomeField"
            "P:ApiSurface.DocumentationSample.SomeRecord.SomeMutableField"
            "T:ApiSurface.DocumentationSample.TypeWithMultipleConstructors"
        ]
        |> Set.ofList

    let allowableExtraInternal =
        [
            // These are lifted to the top level by the F# 6 compiler, but not earlier compilers.
            "T:ApiSurface.DocumentationSample.MyModule.someInnerLambda@107"
            "M:ApiSurface.DocumentationSample.MyModule.someInnerLambda@107.Invoke(System.Int32)"
            "F:ApiSurface.DocumentationSample.MyModule.someInnerLambda@107.x"
        ]
        |> Set.ofList
